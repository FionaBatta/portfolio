{"ast":null,"code":"var _jsxFileName = \"/var/www/html/portfolio/client/src/components/Contact/Contact.js\";\n// Modules //\nimport React from 'react';\nimport axios from 'axios';\nimport Fade from 'react-reveal/Fade';\nimport emailjs from 'emailjs-com'; // Style //\n\nimport { Container, Col, Row, Card } from 'react-bootstrap';\nimport './Contact.scss';\nimport Phone from './phone.png';\nimport Mail from './mail.png';\nimport CV from './cv.png';\nimport pdf from './CV_Battaglia_Fiona.pdf';\n\nclass Contact extends React.Component {\n  sendEmail(e) {\n    e.preventDefault(); //This is important, i'm not sure why, but the email won't send without it\n\n    emailjs.sendForm('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', e.target, 'YOUR_USER_ID').then(result => {\n      window.location.reload(); //This is if you still want the page to reload (since e.preventDefault() cancelled that behavior) \n    }, error => {\n      console.log(error.text);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"test-mailing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, \"Let's see if it works\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"test-mailing\",\n      onChange: this.handleChange,\n      placeholder: \"Post some lorem ipsum here\",\n      required: true,\n      value: this.state.feedback,\n      style: {\n        width: '100%',\n        height: '150px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Submit\",\n      className: \"btn btn--submit\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  handleChange(event) {\n    this.setState({\n      feedback: event.target.value\n    });\n  }\n\n  handleSubmit() {\n    const templateId = 'template_id';\n    this.sendFeedback(templateId, {\n      message_html: this.state.feedback,\n      from_name: this.state.name,\n      reply_to: this.state.email\n    });\n  }\n\n  sendFeedback(templateId, variables) {\n    window.emailjs.send('gmail', templateId, variables).then(res => {\n      console.log('Email successfully sent!');\n    }) // Handle errors here however you like, or use a React error boundary\n    .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err));\n  }\n  /*render() {\n    return (\n      <div className=\"div_contact-coord\">\n        <Container>\n            <Row>\n            <Fade cascade>\n            <div className=\"div_contact\">\n            <h2 className=\"h2_contact\">Me Contacter</h2>\n              <form id=\"contact-form\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n                <div className=\"form-group\">\n                  <label className=\"label\" htmlFor=\"name\">Nom</label>\n                  <input type=\"text\" className=\"form-control\" />\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"label\" htmlFor=\"exampleInputEmail1\">Email</label>\n                    <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" />\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"label\" htmlFor=\"message\">Message</label>\n                    <textarea className=\"form-control\" rows=\"5\"></textarea>\n                </div>\n                <button type=\"submit\" className=\"btn-submit\">Envoyer</button>\n                </form>\n                </div>\n                <div className=\"div_coord\">\n                <h2 className=\"h2_coord\">Coordonn√©es</h2>\n                <Card className=\"border-0 bg-transparent\">\n                    <Card.Body className=\"card_coord\">\n                        <Card.Img className=\"card_coord-phone\" src={ Phone } />\n                        <Card.Text className=\"card_coord-phonesub\" >06 13 29 59 90</Card.Text>\n                        <Card.Img className=\"card_coord-mail\" src={ Mail } />\n                        <Card.Text className=\"card_coord-mailsub\" >batta.fiona@gmail.com</Card.Text>\n                    </Card.Body>\n                </Card>\n                <Card className=\"border-0 bg-transparent\">\n                    <Card.Body className=\"card_cv\">\n                      <Card.Img className=\"card_cv-img\" src={ CV } />\n                        <Card.Title className=\"card_cv-title\"><a className=\"card_cv-lien\" href={pdf}>Voir mon CV</a></Card.Title>\n                        <Card.Subtitle className=\"card_cv-subtitle\">(PDF)</Card.Subtitle>\n                    </Card.Body>\n                </Card>\n                </div>\n            </Fade>\n          </Row>\n        </Container>\n      </div>\n    );\n  }*/\n\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["/var/www/html/portfolio/client/src/components/Contact/Contact.js"],"names":["React","axios","Fade","emailjs","Container","Col","Row","Card","Phone","Mail","CV","pdf","Contact","Component","sendEmail","e","preventDefault","sendForm","target","then","result","window","location","reload","error","console","log","text","render","handleChange","state","feedback","width","height","handleSubmit","event","setState","value","templateId","sendFeedback","message_html","from_name","name","reply_to","email","variables","send","res","catch","err"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,aAApB,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,iBAA1C;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,EAAP,MAAe,UAAf;AACA,OAAOC,GAAP,MAAgB,0BAAhB;;AAEA,MAAMC,OAAN,SAAsBZ,KAAK,CAACa,SAA5B,CAAsC;AAEpCC,EAAAA,SAAS,CAACC,CAAD,EAAI;AACXA,IAAAA,CAAC,CAACC,cAAF,GADW,CACY;;AAEvBb,IAAAA,OAAO,CAACc,QAAR,CAAiB,iBAAjB,EAAoC,kBAApC,EAAwDF,CAAC,CAACG,MAA1D,EAAkE,cAAlE,EACGC,IADH,CACSC,MAAD,IAAY;AACdC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GADc,CACY;AAC7B,KAHH,EAGMC,KAAD,IAAW;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB;AACH,KALH;AAMD;;AAECC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,cADP;AAEE,MAAA,QAAQ,EAAE,KAAKC,YAFjB;AAGE,MAAA,WAAW,EAAC,4BAHd;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,QALpB;AAME,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,MAAM,EAAE;AAAxB,OANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,eAYE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,SAAS,EAAC,iBAA9C;AAAgE,MAAA,OAAO,EAAE,KAAKC,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF;AAgBC;;AAEDL,EAAAA,YAAY,CAACM,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAACL,MAAAA,QAAQ,EAAEI,KAAK,CAACjB,MAAN,CAAamB;AAAxB,KAAd;AACD;;AAEDH,EAAAA,YAAY,GAAG;AACb,UAAMI,UAAU,GAAG,aAAnB;AAED,SAAKC,YAAL,CAAkBD,UAAlB,EAA8B;AAACE,MAAAA,YAAY,EAAE,KAAKV,KAAL,CAAWC,QAA1B;AAAoCU,MAAAA,SAAS,EAAE,KAAKX,KAAL,CAAWY,IAA1D;AAAgEC,MAAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWc;AAArF,KAA9B;AACA;;AAEDL,EAAAA,YAAY,CAAED,UAAF,EAAcO,SAAd,EAAyB;AACnCxB,IAAAA,MAAM,CAAClB,OAAP,CAAe2C,IAAf,CACE,OADF,EACWR,UADX,EAEEO,SAFF,EAGI1B,IAHJ,CAGS4B,GAAG,IAAI;AACZtB,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,KALH,EAME;AANF,KAOGsB,KAPH,CAOSC,GAAG,IAAIxB,OAAO,CAACD,KAAR,CAAc,oEAAd,EAAoFyB,GAApF,CAPhB;AAQC;AAEP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AArDoC;;AAwGtC,eAAerC,OAAf","sourcesContent":["// Modules //\nimport React from 'react';\nimport axios from 'axios';\nimport Fade from 'react-reveal/Fade';\nimport emailjs from 'emailjs-com';\n\n// Style //\nimport { Container, Col, Row, Card } from 'react-bootstrap';\nimport './Contact.scss';\nimport Phone from './phone.png';\nimport Mail from './mail.png';\nimport CV from './cv.png';\nimport pdf from './CV_Battaglia_Fiona.pdf'\n\nclass Contact extends React.Component {\n\n  sendEmail(e) {\n    e.preventDefault();    //This is important, i'm not sure why, but the email won't send without it\n\n    emailjs.sendForm('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', e.target, 'YOUR_USER_ID')\n      .then((result) => {\n          window.location.reload()  //This is if you still want the page to reload (since e.preventDefault() cancelled that behavior) \n      }, (error) => {\n          console.log(error.text);\n      });\n  }\n\n    render() {\n      return (\n        <form className=\"test-mailing\">\n          <h1>Let's see if it works</h1>\n          <div>\n            <textarea\n              name=\"test-mailing\"\n              onChange={this.handleChange}\n              placeholder=\"Post some lorem ipsum here\"\n              required\n              value={this.state.feedback}\n              style={{width: '100%', height: '150px'}}\n            />\n          </div>\n          <input type=\"button\" value=\"Submit\" className=\"btn btn--submit\" onClick={this.handleSubmit} />\n        </form>\n      )\n      }\n    \n      handleChange(event) {\n        this.setState({feedback: event.target.value})\n      }\n    \n      handleSubmit() {\n        const templateId = 'template_id';\n\n\t      this.sendFeedback(templateId, {message_html: this.state.feedback, from_name: this.state.name, reply_to: this.state.email})\n      }\n\n      sendFeedback (templateId, variables) {\n        window.emailjs.send(\n          'gmail', templateId,\n          variables\n          ).then(res => {\n            console.log('Email successfully sent!')\n          })\n          // Handle errors here however you like, or use a React error boundary\n          .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n        }\n\n  /*render() {\n    return (\n      <div className=\"div_contact-coord\">\n        <Container>\n            <Row>\n            <Fade cascade>\n            <div className=\"div_contact\">\n            <h2 className=\"h2_contact\">Me Contacter</h2>\n              <form id=\"contact-form\" onSubmit={this.handleSubmit.bind(this)} method=\"POST\">\n                <div className=\"form-group\">\n                  <label className=\"label\" htmlFor=\"name\">Nom</label>\n                  <input type=\"text\" className=\"form-control\" />\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"label\" htmlFor=\"exampleInputEmail1\">Email</label>\n                    <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" />\n                </div>\n                <div className=\"form-group\">\n                    <label className=\"label\" htmlFor=\"message\">Message</label>\n                    <textarea className=\"form-control\" rows=\"5\"></textarea>\n                </div>\n                <button type=\"submit\" className=\"btn-submit\">Envoyer</button>\n                </form>\n                </div>\n                <div className=\"div_coord\">\n                <h2 className=\"h2_coord\">Coordonn√©es</h2>\n                <Card className=\"border-0 bg-transparent\">\n                    <Card.Body className=\"card_coord\">\n                        <Card.Img className=\"card_coord-phone\" src={ Phone } />\n                        <Card.Text className=\"card_coord-phonesub\" >06 13 29 59 90</Card.Text>\n                        <Card.Img className=\"card_coord-mail\" src={ Mail } />\n                        <Card.Text className=\"card_coord-mailsub\" >batta.fiona@gmail.com</Card.Text>\n                    </Card.Body>\n                </Card>\n                <Card className=\"border-0 bg-transparent\">\n                    <Card.Body className=\"card_cv\">\n                      <Card.Img className=\"card_cv-img\" src={ CV } />\n                        <Card.Title className=\"card_cv-title\"><a className=\"card_cv-lien\" href={pdf}>Voir mon CV</a></Card.Title>\n                        <Card.Subtitle className=\"card_cv-subtitle\">(PDF)</Card.Subtitle>\n                    </Card.Body>\n                </Card>\n                </div>\n            </Fade>\n          </Row>\n        </Container>\n      </div>\n    );\n  }*/\n\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}